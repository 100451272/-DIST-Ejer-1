void *lib_handle;
    char *error;

    // Load the dynamic library
    lib_handle = dlopen("libclaves.so", RTLD_LAZY);
    if (!lib_handle) {
        fprintf(stderr, "%s\n", dlerror());
        exit(1);
    }

    // Get the function pointers from the library
    int (*create_key)(int, char *);
    int (*delete_key)(int);
    int (*get_value)(int, char **);
    int (*set_value)(int, char *);
    int (*destroy)(void);


    // Get the function pointers from the library
    create_key = dlsym(lib_handle, "create_key");
    delete_key = dlsym(lib_handle, "delete_key");
    get_value = dlsym(lib_handle, "get_value");
    set_value = dlsym(lib_handle, "set_value");
    destroy = dlsym(lib_handle, "destroy");

    if ((error = dlerror()) != NULL) {
        fprintf(stderr, "%s\n", error);
        exit(1);
    }


    // Use the functions from the library
    int key1 = 1;
    char *value1 = "myvalue1";
    int key2 = 2;
    char *value2 = "myvalue2";
    char *get_value_result = NULL;

    create_key(key1, value1);
    create_key(key2, value2);

    get_value(key1, &get_value_result);
    printf("%s\n", get_value_result);
    free(get_value_result);

    set_value(key1, "newvalue1");
    set_value(key2, "newvalue2");

    get_value(key1, &get_value_result);
    printf("%s\n", get_value_result);
    free(get_value_result);

    delete_key(key1);
    delete_key(key2);

    // Unload the dynamic library
    dlclose(lib_handle);